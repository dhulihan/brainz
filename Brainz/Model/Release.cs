// <auto-generated />
//
// To parse this JSON data, add NuGet 'Newtonsoft.Json' then do:
//
//    using QuickType;
//
//    var releaseResponse = ReleaseResponse.FromJson(jsonString);

namespace Brainz.Release
{
    using System;
    using System.Collections.Generic;

    using System.Globalization;
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;

    public partial class ReleaseResponse
    {
        [JsonProperty("disambiguation")]
        public string Disambiguation { get; set; }

        [JsonProperty("releases")]
        public Release[] Releases { get; set; }

        [JsonProperty("first-release-date")]
        public string FirstReleaseDate { get; set; }

        [JsonProperty("primary-type-id")]
        public Guid PrimaryTypeId { get; set; }

        [JsonProperty("secondary-type-ids")]
        public object[] SecondaryTypeIds { get; set; }

        [JsonProperty("title")]
        public string Title { get; set; }

        [JsonProperty("secondary-types")]
        public object[] SecondaryTypes { get; set; }

        [JsonProperty("id")]
        public Guid Id { get; set; }

        [JsonProperty("primary-type")]
        public string PrimaryType { get; set; }
    }

    public partial class Release
    {
        [JsonProperty("title")]
        public string Title { get; set; }

        [JsonProperty("quality")]
        public string Quality { get; set; }

        [JsonProperty("status")]
        public string Status { get; set; }

        [JsonProperty("date")]
        public string Date { get; set; }

        [JsonProperty("id")]
        public Guid Id { get; set; }

        [JsonProperty("release-events")]
        public ReleaseEvent[] ReleaseEvents { get; set; }

        [JsonProperty("barcode")]
        public string Barcode { get; set; }

        [JsonProperty("packaging-id")]
        public string PackagingId { get; set; }

        [JsonProperty("disambiguation")]
        public string Disambiguation { get; set; }

        [JsonProperty("text-representation")]
        public TextRepresentation TextRepresentation { get; set; }

        [JsonProperty("country")]
        public string Country { get; set; }

        [JsonProperty("packaging")]
        public string Packaging { get; set; }

        [JsonProperty("status-id")]
        public string StatusId { get; set; }
    }

    public partial class ReleaseEvent
    {
        [JsonProperty("area")]
        public Area Area { get; set; }

        [JsonProperty("date")]
        public string Date { get; set; }
    }

    public partial class Area
    {
        [JsonProperty("id")]
        public Guid Id { get; set; }

        [JsonProperty("sort-name")]
        public string SortName { get; set; }

        [JsonProperty("name")]
        public string Name { get; set; }

        [JsonProperty("iso-3166-1-codes")]
        public string[] Iso31661Codes { get; set; }

        [JsonProperty("disambiguation")]
        public string Disambiguation { get; set; }
    }

    public partial class TextRepresentation
    {
        [JsonProperty("language")]
        public string Language { get; set; }

        [JsonProperty("script")]
        public string Script { get; set; }
    }
}